# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type StoredFile {
  fileUrl: String!
  filePath: String!
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  matKhau: String
  soDienThoai: String
  vaiTroNguoiDung: VaitroNguoiDung!
  daDangKi: Boolean!
  ten: String!
  gioiTinh: String!
  avatar: StoredFile
  maGiamGia: [MaGiamGia!]
  ghiChu: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum VaitroNguoiDung {
  Admin
  NhanVien
  KhachHang
  QuanLy
}

type MaGiamGia {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  codeVoucher: String!
  minAmount: Float!
  user: User!
  voucherAmount: Float!
  startDate: DateTime!
  endDate: DateTime!
  typeDiscount: TypeDiscount!
}

enum TypeDiscount {
  FreeShip
  ProductDiscount
}

type CustomError {
  mainReason: String!
  message: String!
}

type PaginationOutput {
  totalPages: Int
  totalResults: Int
}

type RegisterUserOutput {
  ok: Boolean!
  error: CustomError
}

type LoginOutput {
  ok: Boolean!
  error: CustomError
  accessToken: String
}

type NewAccessTokenOutput {
  ok: Boolean!
  error: CustomError
  accessToken: String
}

type ChangePasswordOutput {
  ok: Boolean!
  error: CustomError
}

type SanPham {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  avatar: StoredFile
  ten: String!
  loaiSanPham: LoaiSanPham!
  donHang: [DonHang!]!
  trangThai: TrangThai!
  ngayTao: DateTime!
  soTien: Float
  moTaSanPham: String
  ghiChu: String
}

enum LoaiSanPham {
  NuocUong
  DoNgot
}

enum TrangThai {
  DangBan
  NgungBan
}

type DonHang {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  nguoiMua: User!
  sanPham: [SanPham!]!
  soluong: [Float!]!
  maGiamGia: MaGiamGia
  ngayMua: DateTime
  tongTienPhaiTra: Float!
  ghiChu: String
  hinhThucMua: HinhThucMua!
  trangThaiDonHang: TrangThaiDonHang!
}

enum HinhThucMua {
  MangVe
  NgoiTaiQuan
}

enum TrangThaiDonHang {
  Oke
  ChoPheDuyet
}

type AddDonHangOutput {
  ok: Boolean!
  error: CustomError
}

type EditDonHangOutput {
  ok: Boolean!
  error: CustomError
}

type XemThongTinDonHangChoQuanLiOutput {
  ok: Boolean!
  error: CustomError
  DonHang: DonHang
}

type XemDanhSachDonHangOutput {
  ok: Boolean!
  error: CustomError
  paginationOutput: PaginationOutput
  DonHangs: [DonHang!]
}

type AddMaGiamGiaOutput {
  ok: Boolean!
  error: CustomError
}

type XemThongTinMaGiamGiaOutput {
  ok: Boolean!
  error: CustomError
  maGiamGia: MaGiamGia
}

type XemDanhSachMaGiamGiaOutput {
  ok: Boolean!
  error: CustomError
  paginationOutput: PaginationOutput
  maGiamGias: [MaGiamGia!]
}

type NhanVien {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  nhanVien: User!
  chiNhanh: String!
  ngayBatDauLam: DateTime
  MailLienHe: String!
  canCuocCongDan: String
  caLamViec: CaLamViec!
  luong: Float!
}

enum CaLamViec {
  Sang
  Chieu
  Toi
}

type AddNhanVienOutput {
  ok: Boolean!
  error: CustomError
}

type EditNhanVienOutput {
  ok: Boolean!
  error: CustomError
}

type XemThongTinNhanVienOutput {
  ok: Boolean!
  error: CustomError
  nhanVien: NhanVien
}

type XemDanhSachNhanVienOutput {
  ok: Boolean!
  error: CustomError
  paginationOutput: PaginationOutput
  nhanViens: [NhanVien!]
}

type AddSanPhamOutput {
  ok: Boolean!
  error: CustomError
}

type EditSanPhamOutput {
  ok: Boolean!
  error: CustomError
}

type XemThongTinSanPhamOutput {
  ok: Boolean!
  error: CustomError
  sanpham: SanPham
}

type XemDanhSachSanPhamOutput {
  ok: Boolean!
  error: CustomError
  sanPhams: [SanPham!]
  paginationOutput: PaginationOutput
}

type AddUserOutput {
  ok: Boolean!
  error: CustomError
}

type EditUserOutput {
  ok: Boolean!
  error: CustomError
}

type XemThongTinNguoiDungOutput {
  ok: Boolean!
  error: CustomError
  user: User
  soLuongDonHang: Float!
  tongTienDaMua: Float!
}

type XemDanhSachNguoiDungOutput {
  ok: Boolean!
  error: CustomError
  paginationOutput: PaginationOutput
  users: [User!]
}

type ThongKeOuput {
  ok: Boolean!
  error: CustomError
  soNguoiDangKi: Float
  soDonHangThangNay: Float
  soNhanVien: Float
  soSanPham: Float
  doanhThuTrongThang: Float
  sanPhamBanChay: [SanPham!]
  tienLuongCuaTatCaNhanVien: Float
}

input StoredFileInputType {
  fileUrl: String!
  filePath: String!
}

type Query {
  xemThongTinNguoiDung: XemThongTinNguoiDungOutput!
  xemThongTinNguoiDungChoQuanLi(input: XemThongTinNguoiDungChoQuanLiInput!): XemThongTinNguoiDungOutput!
  xemDanhSachNguoiDung(input: XemDanhSachNguoiDungInput!): XemDanhSachNguoiDungOutput!
  xemDanhSachMaGiamGiaChoUser: XemDanhSachMaGiamGiaOutput!
  ThongKeChoQuanLy: ThongKeOuput!
  login(input: LoginInput!): LoginOutput!
  newAccessToken(input: NewAccessTokenInput!): NewAccessTokenOutput!
  xemThongTinSanPham(input: XemThongTinSanPhamInput!): XemThongTinSanPhamOutput!
  xemDanhSachSanPham(input: XemDanhSachSanPhamInput!): XemDanhSachSanPhamOutput!
  xemThongTinNhanVien: XemThongTinNhanVienOutput!
  xemThongTinNhanVienChoQuanLi(input: XemThongTinNhanVienChoQuanLiInput!): XemThongTinNhanVienOutput!
  xemDanhSachNhanVien(input: XemDanhSachNhanVienInput!): XemDanhSachNhanVienOutput!
  xemThongTinDonHangChoQuanLi(input: XemThongTinDonHangChoQuanLiInput!): XemThongTinDonHangChoQuanLiOutput!
  xemDanhSachDonHang(input: XemDanhSachDonHangInput!): XemDanhSachDonHangOutput!
  xemThongTinMaGiamGiaChoQuanLi(input: XemThongTinMaGiamGiaChoQuanLiInput!): XemThongTinMaGiamGiaOutput!
  xemDanhSachMaGiamGia(input: XemDanhSachMaGiamGiaInput!): XemDanhSachMaGiamGiaOutput!
}

input XemThongTinNguoiDungChoQuanLiInput {
  userId: ID!
}

input XemDanhSachNguoiDungInput {
  paginationInput: PaginationInput!
  hoTen: String
  soDienThoai: String
}

input PaginationInput {
  page: Int = 1
  resultsPerPage: Int = 10
}

input LoginInput {
  soDienThoai: String
  matKhau: String!
}

input NewAccessTokenInput {
  accessToken: String!
}

input XemThongTinSanPhamInput {
  SanPhamId: ID!
}

input XemDanhSachSanPhamInput {
  paginationInput: PaginationInput!
  tenSanPham: String
}

input XemThongTinNhanVienChoQuanLiInput {
  NhanVienId: ID!
}

input XemDanhSachNhanVienInput {
  paginationInput: PaginationInput!
  canCuocCongDan: String
  soDienThoai: String
}

input XemThongTinDonHangChoQuanLiInput {
  DonHangId: ID!
}

input XemDanhSachDonHangInput {
  paginationInput: PaginationInput!
}

input XemThongTinMaGiamGiaChoQuanLiInput {
  maGiamGiaId: ID!
}

input XemDanhSachMaGiamGiaInput {
  paginationInput: PaginationInput!
  codeVoucher: String
}

type Mutation {
  addUser(input: AddUserInput!): AddUserOutput!
  editUser(input: EditUserInput!): EditUserOutput!
  registerUser(input: RegisterUserInput!): RegisterUserOutput!
  changePassword(input: ChangePasswordInput!): ChangePasswordOutput!
  addSanPham(input: AddSanPhamInput!): AddSanPhamOutput!
  editSanPham(input: EditSanPhamInput!): EditSanPhamOutput!
  addNhanVien(input: AddNhanVienInput!): AddNhanVienOutput!
  editNhanVien(input: EditNhanVienInput!): EditNhanVienOutput!
  addDonHang(input: AddDonHangInput!): AddDonHangOutput!
  addDonHangChoUser(input: AddDonHangChoUserInput!): AddDonHangOutput!
  editDonHang(input: EditDonHangInput!): EditDonHangOutput!
  addMaGiamGia(input: AddMaGiamGiaInput!): AddMaGiamGiaOutput!
}

input AddUserInput {
  soDienThoai: String
  ten: String!
  gioiTinh: String!
  avatar: StoredFileInputType
  maGiamGia: [MaGiamGiaInputType!]
  ghiChu: String
}

input MaGiamGiaInputType {
  codeVoucher: String!
  minAmount: Float!
  user: UserInputType!
  voucherAmount: Float!
  startDate: DateTime!
  endDate: DateTime!
  typeDiscount: TypeDiscount!
}

input UserInputType {
  matKhau: String
  soDienThoai: String
  vaiTroNguoiDung: VaitroNguoiDung!
  daDangKi: Boolean!
  ten: String!
  gioiTinh: String!
  avatar: StoredFileInputType
  maGiamGia: [MaGiamGiaInputType!]
  ghiChu: String
}

input EditUserInput {
  soDienThoai: String
  daDangKi: Boolean
  ten: String
  gioiTinh: String
  avatar: StoredFileInputType
  ghiChu: String
  nguoiCanEditId: ID!
}

input RegisterUserInput {
  matKhau: String
  soDienThoai: String
  ten: String!
  maGiamGia: [MaGiamGiaInputType!]
  matKhauLapLai: String!
}

input ChangePasswordInput {
  matKhauCu: String!
  matKhauMoi: String!
  matKhauMoiLapLai: String!
}

input AddSanPhamInput {
  avatar: StoredFileInputType
  ten: String!
  loaiSanPham: LoaiSanPham!
  soTien: Float
  moTaSanPham: String
}

input EditSanPhamInput {
  avatar: StoredFileInputType
  ten: String
  loaiSanPham: LoaiSanPham
  trangThai: TrangThai
  soTien: Float
  moTaSanPham: String
  sanPhamId: ID!
}

input AddNhanVienInput {
  chiNhanh: String!
  ngayBatDauLam: DateTime
  MailLienHe: String!
  canCuocCongDan: String
  caLamViec: CaLamViec!
  luong: Float!
  soDienThoai: String!
  ten: String!
  gioiTinh: String!
}

input EditNhanVienInput {
  chiNhanh: String
  MailLienHe: String
  canCuocCongDan: String
  caLamViec: CaLamViec
  luong: Float
}

input AddDonHangInput {
  hinhThucMua: HinhThucMua!
  trangThaiDonHang: TrangThaiDonHang!
  diaChi: String!
  codeVoucher: String
  sanPham: [Order!]!
  PhiShip: Float!
}

input Order {
  sanPhamId: ID!
  numberSanPham: Float!
}

input AddDonHangChoUserInput {
  hinhThucMua: HinhThucMua!
  trangThaiDonHang: TrangThaiDonHang!
  diaChi: String!
  codeVoucher: String
  sanPham: [Order!]!
  soDienThoai: Float!
}

input EditDonHangInput {
  donHangId: Float!
}

input AddMaGiamGiaInput {
  codeVoucher: String!
  minAmount: Float!
  voucherAmount: Float!
  startDate: DateTime!
  endDate: DateTime!
  typeDiscount: TypeDiscount!
}